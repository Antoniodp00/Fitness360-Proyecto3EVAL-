-- =======================================
-- Base de datos: Proyecto Fitness360
-- Script SQL completo con atributos adicionales y auditoría
-- =======================================

-- 1) Crear base de datos y seleccionarla
CREATE DATABASE IF NOT EXISTS Fitness360;
USE Fitness360;

-- 2) Tabla Usuario (datos demográficos + auditoría)
CREATE TABLE Usuario (
    idUsuario INT PRIMARY KEY AUTO_INCREMENT,           -- Identificador único
    nombre VARCHAR(50) NOT NULL,                        -- Nombre
    apellidos VARCHAR(50) NOT NULL,                     -- Apellidos
    correo VARCHAR(100) NOT NULL UNIQUE,                -- Email único
    password VARCHAR(100) NOT NULL,                     -- Contraseña (hash)
    telefono VARCHAR(20),                               -- Teléfono

    -- Datos demográficos
    fecha_nacimiento DATE,                              -- Fecha de nacimiento
    sexo ENUM('M','F','O'),                             -- Género
    altura DECIMAL(4,1),                                -- Altura en cm (e.g., 175.5)

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 3) Tabla Empleado (especialidad, contratación + auditoría)
CREATE TABLE Empleado (
    idUsuario INT PRIMARY KEY,                          -- Hereda id de Usuario
    descripcion TEXT,                                   -- Descripción profesional
    rol VARCHAR(50),                                    -- Rol (entrenador/dietista)

    especialidad ENUM('entrenador','dietista','ambos') NOT NULL DEFAULT 'ambos',
    fecha_contratacion DATE,                            -- Fecha de inicio

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE
);

-- 4) Tabla Cliente (auditoría)
CREATE TABLE Cliente (
    idUsuario INT PRIMARY KEY,                          -- Hereda id de Usuario

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idUsuario) REFERENCES Usuario(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE
);

-- 5) Tabla Tarifa (periodo + auditoría)
CREATE TABLE Tarifa (
    idTarifa INT PRIMARY KEY AUTO_INCREMENT,            -- Identificador de tarifa
    precio DECIMAL(8,2) NOT NULL,                       -- Precio en €
    descripcion TEXT,                                   -- Descripción
    periodo ENUM('mensual','trimestral','anual','único') NOT NULL DEFAULT 'mensual',
    idEmpleado INT NOT NULL,                            -- Profesional creador

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idEmpleado) REFERENCES Empleado(idUsuario)
      ON DELETE SET NULL ON UPDATE CASCADE
);

-- 6) Tabla Dieta (auditoría)
CREATE TABLE Dieta (
    idDieta INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    archivo VARCHAR(255),                               -- Ruta al recurso
    idEmpleado INT NOT NULL,

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idEmpleado) REFERENCES Empleado(idUsuario)
      ON DELETE SET NULL ON UPDATE CASCADE
);

-- 7) Tabla Rutina (auditoría)
CREATE TABLE Rutina (
    idRutina INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    idEmpleado INT NOT NULL,

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idEmpleado) REFERENCES Empleado(idUsuario)
      ON DELETE SET NULL ON UPDATE CASCADE
);

-- 8) Relación Cliente_Dieta (fechas de asignación y fin)
CREATE TABLE Cliente_Dieta (
    idCliente INT,
    idDieta INT,
    fecha_asignacion DATE,                              -- Inicio de asignación
    fecha_fin DATE,                                     -- Fin de asignación
    PRIMARY KEY (idCliente, idDieta),

    FOREIGN KEY (idCliente) REFERENCES Cliente(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idDieta) REFERENCES Dieta(idDieta)
      ON DELETE CASCADE ON UPDATE CASCADE
);

-- 9) Relación Cliente_Rutina (fechas de asignación y fin)
CREATE TABLE Cliente_Rutina (
    idCliente INT,
    idRutina INT,
    fecha_asignacion DATE,
    fecha_fin DATE,
    PRIMARY KEY (idCliente, idRutina),

    FOREIGN KEY (idCliente) REFERENCES Cliente(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idRutina) REFERENCES Rutina(idRutina)
      ON DELETE CASCADE ON UPDATE CASCADE
);

-- 10) Relación Cliente_Tarifa (estado, fechas + auditoría)
CREATE TABLE Cliente_Tarifa (
    idCliente INT,
    idTarifa INT,
    estado ENUM('activa','inactiva','suspendida') NOT NULL DEFAULT 'activa',
    fecha_contratacion DATE,
    fecha_renovacion DATE,
    fecha_fin DATE,

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    PRIMARY KEY (idCliente, idTarifa),
    FOREIGN KEY (idCliente) REFERENCES Cliente(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idTarifa) REFERENCES Tarifa(idTarifa)
      ON DELETE CASCADE ON UPDATE CASCADE
);

-- 11) Tabla Revision (auditoría)
CREATE TABLE Revision (
    idRevision INT PRIMARY KEY AUTO_INCREMENT,
    fecha DATE NOT NULL,
    peso DECIMAL(5,2),
    grasa DECIMAL(5,2),
    musculo DECIMAL(5,2),
    mPecho DECIMAL(5,2),
    mCintura DECIMAL(5,2),
    mCadera DECIMAL(5,2),
    observaciones TEXT,
    imagen VARCHAR(255),
    idCliente INT NOT NULL,
    idEmpleado INT,

    -- Auditoría
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (idCliente) REFERENCES Cliente(idUsuario)
      ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idEmpleado) REFERENCES Empleado(idUsuario)
      ON DELETE SET NULL ON UPDATE CASCADE
);
